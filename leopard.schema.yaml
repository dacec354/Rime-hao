# Rime schema settings
# encoding: utf-8

schema:
  schema_id: leopard
  name: '好码・豹码(音托)'
  version: '20250125'
  author:
    - 作者 荒
    - Rime方案 朱宇浩
    - 官方QQ群 1012245282
  description: |
    四定，音托
    "`键 反查：拼音+笔画(hspnz)"
  dependencies:
    - leo_pinyin
    - leo_stroke
    - leopard_chaifen

switches:
  - options:
      - original
      - yuhao_charset_prioritizer_common
      - yuhao_charset_prioritizer_ubiquitous
    states: [原始排序, 常用字優先, 極常用字優先]
    #reset: 1
    # Control+Shift+M
  - options:
      - cjk
      - yuhao_charset_filter_common
      - yuhao_charset_filter_tonggui
      - yuhao_charset_filter_harmonic
    states: [全漢字, 常用字, 通规字, 陸繁字]
    #reset: 0
    # Control+Shift+O
  - name: yuhao_single_char_only_for_full_code
    states: ["字詞同出", "全碼出單"]
    reset: 0
    # Control+Shift+D
  - name: yuhao_postpone_full_code
    reset: 0
    states: [原始排序, 全碼後置]
    # Control+Shift+H
  - options:
      - yuhao_chaifen.off
      - yuhao_chaifen.lv2
      - yuhao_chaifen.lv3
    states: [無註解, 二重註解, 多重註解]
    #reset: 0
  - name: yuhao_autocompletion_filter
    reset: 0
    states: [輸入預測, 精確匹配]
    # Control+Shift+Y
  - name: traditionalization
    states: [简保持, 简转繁]
    reset: 0
    # Control+Shift+F
  - name: simplification
    states: [繁保持, 繁轉簡]
    reset: 0
    # Control+Shift+J
  - name: ascii_mode
    states: [中文, 西文]
    reset: 0
  - name: full_shape
    states: ["半角", "全角"]
    reset: 0
  - name: ascii_punct
    states: [。，, ．，]
    reset: 0

engine:
  processors:
    - lua_processor@*yuhao.yuhao_switch_proc@yuhao_macro
    - ascii_composer
    - recognizer
    - lua_processor@*yuhao.yuhao_chaifen_processor
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - affix_segmentor@zaoci # 用户造詞
    - abc_segmentor
    - affix_segmentor@leo_pinyin_lookup
    - affix_segmentor@leo_stroke_lookup
    - affix_segmentor@reverse_lookup
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - history_translator@history
    #- reverse_lookup_translator
    - script_translator@leo_pinyin_lookup
    - table_translator@leo_stroke_lookup
    - table_translator@fixed # 固定字頻
    - table_translator
    - table_translator@zaoci  # 用户造詞
    - lua_translator@*amz.shijian
    - lua_translator@*yuhao.yuhao_switch_tr@yuhao_macro  # 控制臺
  filters:
    - lua_filter@*yuhao.yuhao_autocompletion_filter
    - lua_filter@*yuhao.yuhao_single_char_only_for_full_code
    - lua_filter@*yuhao.yuhao_charset_filter_common
    - lua_filter@*yuhao.yuhao_charset_filter_tonggui
    - lua_filter@*yuhao.yuhao_charset_filter_harmonic
    - simplifier@traditionalize
    - simplifier@simplify
    - reverse_lookup_filter@reverse_lookup
    - lua_filter@*yuhao.yuhao_chaifen_filter
    - lua_filter@*yuhao.yuhao_postpone_full_code
    - lua_filter@*yuhao.yuhao_charset_prioritizer_common
    - lua_filter@*yuhao.yuhao_charset_prioritizer_ubiquitous
    - uniquifier

traditionalize:
  tags: [abc, leo_pinyin_lookup, leo_stroke_lookup]
  option_name: traditionalization
  opencc_config: s2t.json
  tips: all
  comment_format:
    - xform/^/〔/
    - xform/$/〕/

simplify:
  tags: [abc, leo_pinyin_lookup, leo_stroke_lookup]
  option_name: simplification
  opencc_config: t2s.json
  tips: all
  comment_format:
    - xform/^/〔/
    - xform/$/〕/

yuhao_postpone_full_code:
  tags: [abc]
  selected_chars: "束嫌存猪炸暑睹睛只另乘津糊袍饱書諸后掏眨壓緒" # 後置漢字
  lua:
    max_index: 3 # 最大後置位置，默認爲 3

schema_name:
  code: leopard
  spelling: leopard_chaifen

yuhao_chaifen:
  lua:
    switch_key: "Control+c"
    cycle_key: "Shift+Control+C"

speller:
  alphabet: zyxwvutsrqponmlkjihgfedcba;'/
  initials: zyxwvutsrqponmlkjihgfedcba;'/
  delimiter: "`"
  max_code_length: 4
  auto_select: true
  auto_select_pattern: ^;\w+
  algebra:

translator:
  dictionary: leopard
  prism: leopard
  db_class: tabledb
  enable_completion: true
  enable_sentence: false
  enable_user_dict: true
  enable_encoder: true
  encode_commit_history: false # 对连续上屏的词自动成词
  max_phrase_length: 4 # 自动成词的最大词长
  preedit_format: []
  comment_format:
    - "xform/^~/ /"

zaoci:
  __include: translator
  initial_quality: 0
  enable_sentence: true
  enable_user_dict: true
  prefix: "`"
  tips: "〔用户造詞〕"
  tag: zaoci

# 固定词库词的权重，防止自动调频
fixed:
  __include: translator
  enable_sentence: false
  enable_user_dict: false
  initial_quality: 1000000

history:
  input: "'"
  size: 1
  initial_quality: 0

reverse_lookup:
  tag: reverse_lookup
  dictionary: leopard
  prefix: "`"    # 反查引导符「`」
  # suffix:   # 反查关闭符，暂不定义
  tips: 【反查：拼音+笔画(hspnz)】
  closing_tips: 【反查关闭】
  tags: [ leo_pinyin_lookup, leo_stroke_lookup ]
  extra_tags:
    - leo_pinyin_lookup
    - leo_stroke_lookup

leo_pinyin_lookup:
  tag: leo_pinyin_lookup
  dictionary: leo_pinyin
  enable_user_dict: false
  prefix: '`P'
  tips: 【拼音反查】
  closing_tips: 【反查关闭】
  initial_quality: 0.2

leo_stroke_lookup:
  tag: leo_stroke_lookup
  dictionary: stroke_dovepelia
  prism: leo_stroke
  enable_user_dict: false
  prefix: '`B'
  tips: 【五笔画反查】
  closing_tips: 【反查关闭】
  initial_quality: 0.5
  preedit_format:
    - 'xform/^([hspnz]+)$/$1\t（\U$1\E）/'
    - xlit/HSPNZ/一丨丿丶乙/
  comment_format:
    - xlit/qweas/hspnz/

# 自定義宏
yuhao_macro:
  funckeys:
    macro: [0x2f] # 當輸入串以 "/" 開頭時, 認爲是宏調用
  macros:
    help:
      # - { type: tip, name: ❖配置中心 }
      - { type: switch, name: traditionalization, states: [☐简保持, ☑简转繁] }
      - { type: switch, name: simplification, states: [☐繁保持, ☑繁轉簡] }
      - { type: switch, name: full_shape, states: [☐半角, ☑全角] }
      - { type: switch, name: ascii_punct, states: [☐中文標點, ☑西文標點] }
    set:
      # - { type: tip, name: ❖配置中心 }
      - { type: switch, name: traditionalization, states: [☐简保持, ☑简转繁] }
      - { type: switch, name: simplification, states: [☐繁保持, ☑繁轉簡] }
      - { type: switch, name: full_shape, states: [☐半角, ☑全角] }
      - { type: switch, name: ascii_punct, states: [☐中文標點, ☑西文標點] }
    date:
      - { type: eval, name: ☀日期, expr: return os.date("%Y-%m-%d") }
      - { type: eval, name: ⛅年月日, expr: return os.date("%Y年%m月%d日") }
    time:
      - { type: eval, name: ⌚時間, expr: return os.date("%H:%M:%S") }
      - { type: eval, name: Ⓣ時間, expr: return os.date("%Y%m%d%H%M") }
      - { type: eval, name: Ⓢ時間戳, expr: return tostring(os.time()) }
    char:
      - {
          type: switch,
          name: yuhao_single_char_only_for_full_code,
          states: [☐字詞, ☑純單],
        }
    div:
      - {
          type: radio,
          names:
            [
              yuhao_chaifen.off,
              yuhao_chaifen.lv2,
              yuhao_chaifen.lv3,
            ],
          states: [☐☐☐註解, ☐☑☐註解, ☑☑☑註解],
        }
    cjk:
      - {
          type: radio,
          names:
            [
              cjk,
              yuhao_charset_prioritizer,
              yuhao_charset_filter_common,
              yuhao_charset_filter_tonggui,
              yuhao_charset_filter_harmonic,
            ],
          states: [☐☐☐全漢字, ☐☐☑常用字前置, ☐☑☐常用字, ☐☑☑通规字, ☑☐☐陸標繁],
        }
    trad:
      - { type: switch, name: traditionalization, states: [☐不轉換, ☑簡轉繁] }
    simp:
      - { type: switch, name: simplification, states: [☐不轉換, ☑繁轉簡] }
    full:
      - { type: switch, name: full_shape, states: [☐半角, ☑全角] }
    half:
      - { type: switch, name: full_shape, states: [☐半角, ☑全角] }
    punc:
      - { type: switch, name: ascii_punct, states: [☐中文標點, ☑西文標點] }
    dot:
      - { type: switch, name: ascii_punct, states: [☐中文標點, ☑西文標點] }
    dist:
      - type: eval
        expr: >
          return function(args)
            return string.format("librime: [%s]", rime_api.get_rime_version())
          end
      - type: eval
        expr: >
          return function(args)
            return string.format("distribution: [%s](%s/%s)",
              rime_api.get_distribution_name(),
              rime_api.get_distribution_code_name(),
              rime_api.get_distribution_version())
          end
    uni:
      - type: eval
        hijack: true
        expr: return require("yuhao.yuhao_core").unicode()
    w:
      - type: eval
        hijack: true
        expr: return require("yuhao.yuhao_core").unicode()

punctuator:
  import_preset: symbols
  half_shape:
    "`": "`"
    "#": "#"
    "%": "%"
    "*": "*"
    "\\": "、"
    "[": "「"
    "]": "」"
    "{": "『"
    "}": "』"
    "/": "/"
    "|": "|"

key_binder:
  bindings:
    - { when: always, accept: "Control+period", toggle: ascii_punct }
    - { when: always, accept: "Control+Shift+period", toggle: ascii_punct }
    - { when: always, accept: "Control+Shift+J", toggle: simplification }
    - { when: always, accept: "Control+Shift+F", toggle: traditionalization }
    - {
        when: always,
        accept: "Control+Shift+M",
        toggle: yuhao_charset_prioritizer_common,
      } # 常用字優先
    - {
        when: always,
        accept: "Control+Shift+O",
        toggle: yuhao_charset_filter_common,
      } # 常用詞過濾
    - { when: has_menu, accept: "0", toggle: yuhao_charset_filter_common } # 常用詞過濾
    - { when: has_menu, accept: "/", toggle: yuhao_chaifen.off } # 拆分
    - {
        when: always,
        accept: "Control+Shift+D",
        toggle: yuhao_single_char_only_for_full_code,
      } # 全码出单
    - {
        when: always,
        accept: "Control+Shift+H",
        toggle: yuhao_postpone_full_code,
      } # 全碼後置
    - {
        when: always,
        accept: "Control+Shift+Y",
        toggle: yuhao_autocompletion_filter,
      } # 輸入預測
    - { when: has_menu, accept: semicolon, send: 2 } # 分号次选
    - { when: has_menu, accept: apostrophe, send: 3 } # 引号三选
    - { when: has_menu, accept: Tab, send: 2 } # 製表符次选
    - { when: has_menu, accept: minus, send: Page_Up } # 減號上翻頁
    - { when: has_menu, accept: equal, send: Page_Down } # 等號下翻頁

#shijian:仅仅作为提示使用，编码已经写死，引导适应性更高，如有需求lua中修改
#时间：osj 或者 /sj
#日期：orq 或者 /rq
#农历：onl 或者 /nl
#星期：oxq 或者 /xq
#今年第几周：oww 或者 /ww
#节气：ojq 或者 /jq
#日期+时间：ors 或者 /rs
#时间戳：ott 或者 /tt
#大写N日期：N20250315
#节日：ojr 或者 /jr
#问候模板：/day 或者 oday
#生日信息：/sr或者osr
birthday_reminder:  #日期格式：必须是4位数字，格式为MMDD（月份和日期），例如：1月27日 → 0127 ，#备注格式：在日期后添加逗号，然后添加任意文本作为备注，例如："0501,我的好朋友"，也可以无备注
  solar_birthdays:  # 公历生日, 姓名: "日期,备注" or 姓名: "日期"
    小明: "0501,准备礼物"
    大明: "0405"
  lunar_birthdays:  # 农历生日, 姓名: "日期,备注" or 姓名: "日期"
    小明: "0114"
    小红: "0815,农历中秋"

recognizer:
  import_preset: default
  patterns:
    uppercase: "^(?![`;]).*[A-Z][-_+.'0-9A-Za-z]*$"
    reverse_lookup: "^`([a-z]+?)*$"
    leo_pinyin_lookup: "^`P([a-z]+'?)*$"
    leo_stroke_lookup: "^`B([a-z]+'?)*$"
    zaoci: "^[a-z]*`[a-z`]*$"
    punct: "^/([0-9]0?|[A-Za-z]+)?$"
    #number: "^[-+]?[0-9][,.:0-9]*[%]?$"
    unicode: "^/uni(/[a-zA-Z0-9]*)*$"

menu:
  page_size: 5
# style:
#   horizontal: false
#   inline_preedit: true
#   preedit_type: composition
#   inline_candidate: true
